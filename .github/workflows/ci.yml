name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CI: true
  NODE_ENV: test

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Cache for backend dependencies
      - name: Cache backend node_modules
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      # Cache for frontend dependencies
      - name: Cache frontend node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          npm pkg delete scripts.prepare
          npm ci

      - name: Lint backend
        working-directory: ./backend
        run: npm run lint

      - name: Build backend
        working-directory: ./backend
        run: npm run build

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: |
          npm pkg delete scripts.prepare
          npm ci

      - name: Lint frontend
        working-directory: ./frontend
        run: npm run lint

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Cache build artifacts
        if: success()
        uses: actions/cache@v3
        with:
          path: |
            backend/dist
            frontend/dist
          key: ${{ runner.os }}-build-${{ github.sha }} 